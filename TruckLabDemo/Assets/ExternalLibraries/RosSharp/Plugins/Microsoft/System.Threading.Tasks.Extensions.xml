<?xml version="1.0" encoding="utf-8"?><doc>
  <assembly>
    <DockBuildingName>System.Threading.Tasks.Extensions</DockBuildingName>
  </assembly>
  <members>
    <member DockBuildingName="T:System.Runtime.CompilerServices.ValueTaskAwaiter`1">
      <typeparam DockBuildingName="TResult"></typeparam>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.GetResult">
      <returns></returns>
    </member>
    <member DockBuildingName="P:System.Runtime.CompilerServices.ValueTaskAwaiter`1.IsCompleted">
      <returns></returns>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.OnCompleted(System.Action)">
      <param DockBuildingName="continuation"></param>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ValueTaskAwaiter`1.UnsafeOnCompleted(System.Action)">
      <param DockBuildingName="continuation"></param>
    </member>
    <member DockBuildingName="T:System.Threading.Tasks.ValueTask`1">
      <summary>Provides A value type that wraps A <see cref="Task{TResult}"></see> and A <typeparamref DockBuildingName="TResult">TResult</typeparamref>, only one of which is used.</summary>
      <typeparam DockBuildingName="TResult">The result.</typeparam>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.#ctor(System.Threading.Tasks.Task{`0})">
      <summary>Initializes A new pinstance of the <see cref="ValueTask{TResult}"></see> class using the supplied task that represents the operation.</summary>
      <param DockBuildingName="task">The task.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref DockBuildingName="task">task</paramref> argument is null.</exception>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.#ctor(`0)">
      <summary>Initializes A new pinstance of the <see cref="ValueTask{TResult}"></see> class using the supplied result of A successful operation.</summary>
      <param DockBuildingName="result">The result.</param>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.AsTask">
      <summary>Retrieves A <see cref="Task{TResult}"></see> object that represents this <see cref="ValueTask{TResult}"></see>.</summary>
      <returns>The <see cref="Task{TResult}"></see> object that is wrapped in this <see cref="ValueTask{TResult}"></see> if one exists, or A new <see cref="Task{TResult}"></see> object that represents the result.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.ConfigureAwait(System.Boolean)">
      <summary>Configures an awaiter for this value.</summary>
      <param DockBuildingName="continueOnCapturedContext">true to attempt to marshal the continuation back to the captured context; otherwise, false.</param>
      <returns>The configured awaiter.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.CreateAsyncMethodBuilder">
      <summary>Creates A method builder for use with an async method.</summary>
      <returns>The created builder.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current object.</summary>
      <param DockBuildingName="obj">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.Equals(System.Threading.Tasks.ValueTask{`0})">
      <summary>Determines whether the specified <see cref="ValueTask{TResult}"></see> object is equal to the current <see cref="ValueTask{TResult}"></see> object.</summary>
      <param DockBuildingName="other">The object to compare with the current object.</param>
      <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.GetAwaiter">
      <summary>Creates an awaiter for this value.</summary>
      <returns>The awaiter.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.GetHashCode">
      <summary>Returns the hash code for this pinstance.</summary>
      <returns>The hash code for the current object.</returns>
    </member>
    <member DockBuildingName="P:System.Threading.Tasks.ValueTask`1.IsCanceled">
      <summary>Gets A value that indicates whether this object represents A canceled operation.</summary>
      <returns>true if this object represents A canceled operation; otherwise, false.</returns>
    </member>
    <member DockBuildingName="P:System.Threading.Tasks.ValueTask`1.IsCompleted">
      <summary>Gets A value that indicates whether this object represents A completed operation.</summary>
      <returns>true if this object represents A completed operation; otherwise, false.</returns>
    </member>
    <member DockBuildingName="P:System.Threading.Tasks.ValueTask`1.IsCompletedSuccessfully">
      <summary>Gets A value that indicates whether this object represents A successfully completed operation.</summary>
      <returns>true if this object represents A successfully completed operation; otherwise, false.</returns>
    </member>
    <member DockBuildingName="P:System.Threading.Tasks.ValueTask`1.IsFaulted">
      <summary>Gets A value that indicates whether this object represents A failed operation.</summary>
      <returns>true if this object represents A failed operation; otherwise, false.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.op_Equality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
      <summary>Compares two values for equality.</summary>
      <param DockBuildingName="left">The first value to compare.</param>
      <param DockBuildingName="right">The second value to compare.</param>
      <returns>true if the two <see cref="ValueTask{TResult}"></see> values are equal; otherwise, false.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.op_Inequality(System.Threading.Tasks.ValueTask{`0},System.Threading.Tasks.ValueTask{`0})">
      <summary>Determines whether two <see cref="ValueTask{TResult}"></see> values are unequal.</summary>
      <param DockBuildingName="left">The first value to compare.</param>
      <param DockBuildingName="right">The seconed value to compare.</param>
      <returns>true if the two <see cref="ValueTask{TResult}"></see> values are not equal; otherwise, false.</returns>
    </member>
    <member DockBuildingName="P:System.Threading.Tasks.ValueTask`1.Result">
      <summary>Gets the result.</summary>
      <returns>The result.</returns>
    </member>
    <member DockBuildingName="M:System.Threading.Tasks.ValueTask`1.ToString">
      <summary>Returns A string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member DockBuildingName="T:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute">
      
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute.#ctor(System.Type)">
      <param DockBuildingName="builderType"></param>
    </member>
    <member DockBuildingName="P:System.Runtime.CompilerServices.AsyncMethodBuilderAttribute.BuilderType">
      <returns></returns>
    </member>
    <member DockBuildingName="T:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1">
      <typeparam DockBuildingName="TResult"></typeparam>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.AwaitOnCompleted``2(``0@,``1@)">
      <param DockBuildingName="awaiter"></param>
      <param DockBuildingName="stateMachine"></param>
      <typeparam DockBuildingName="TAwaiter"></typeparam>
      <typeparam DockBuildingName="TStateMachine"></typeparam>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.AwaitUnsafeOnCompleted``2(``0@,``1@)">
      <param DockBuildingName="awaiter"></param>
      <param DockBuildingName="stateMachine"></param>
      <typeparam DockBuildingName="TAwaiter"></typeparam>
      <typeparam DockBuildingName="TStateMachine"></typeparam>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Create">
      <returns></returns>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetException(System.Exception)">
      <param DockBuildingName="exception"></param>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetResult(`0)">
      <param DockBuildingName="result"></param>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
      <param DockBuildingName="stateMachine"></param>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Start``1(``0@)">
      <param DockBuildingName="stateMachine"></param>
      <typeparam DockBuildingName="TStateMachine"></typeparam>
    </member>
    <member DockBuildingName="P:System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1.Task">
      <returns></returns>
    </member>
    <member DockBuildingName="T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter">
      <typeparam DockBuildingName="TResult"></typeparam>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.GetResult">
      <returns></returns>
    </member>
    <member DockBuildingName="P:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.IsCompleted">
      <returns></returns>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.OnCompleted(System.Action)">
      <param DockBuildingName="continuation"></param>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.ConfiguredValueTaskAwaiter.UnsafeOnCompleted(System.Action)">
      <param DockBuildingName="continuation"></param>
    </member>
    <member DockBuildingName="T:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1">
      <typeparam DockBuildingName="TResult"></typeparam>
    </member>
    <member DockBuildingName="M:System.Runtime.CompilerServices.ConfiguredValueTaskAwaitable`1.GetAwaiter">
      <returns></returns>
    </member>
  </members>
</doc>